name: Build MLIR Wheels

on:
  push:
    branches: ['cidev']
  workflow_dispatch:
    inputs:
      package_suffix:
        description: 'Suffix to append to package names'
        required: true
        default: '-snapshot'
      package_version:
        description: 'Version of the package'
        required: true
        default: '0.1a1'

jobs:
  build_wheels:
    name: "${{ matrix.os }} :: Build MLIR wheels"
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        node: [1]
        os: [ubuntu-18.04]
        experimental: [false]
        include:
          - node: 2
            os: macos-latest
            experimental: true
          - node: 3
            os: windows-2019
            experimental: true

    env:
      CIBW_BUILD_VERBOSITY: 1
      CIBW_BEFORE_BUILD_LINUX: pip install -r main_checkout/requirements.txt
      CIBW_BEFORE_BUILD_MACOS: pip install -r main_checkout/requirements.txt
      CIBW_BEFORE_BUILD_WINDOWS: pip install -r main_checkout\\requirements.txt
      # Note that on Linux, we run under docker with an altered path.
      CIBW_ENVIRONMENT_LINUX: "REPO_DIR=/project/main_checkout"
      CIBW_ENVIRONMENT_MACOS: "REPO_DIR=${{ github.workspace }}/main_checkout"
      CIBW_ENVIRONMENT_WINDOWS: "REPO_DIR='${{ github.workspace }}\\main_checkout'"

      CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
      #CIBW_BUILD: "cp38-* cp39-*"
      CIBW_BUILD: "cp38-*"
      CIBW_SKIP: "*-win32 *-manylinux_i686"

    steps:
      - uses: actions/checkout@v2
        with:
          path: 'main_checkout'

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Checkout LLVM
        shell: bash
        run: |
          python ./main_checkout/scripts/checkout_repo.py \
            ./llvm-project \
            https://github.com/llvm/llvm-project.git \
            main \
            ./main_checkout/llvm-project.version

      - name: Write version info
        shell: bash
        run: |
          cat << EOF > ./main_checkout/version_info.json
          {
            "package-suffix": "${{ github.event.inputs.package_suffix }}",
            "package-version": "${{ github.event.package_version }}",
            "llvm-revision": "$(cd ./llvm-project && git rev-parse HEAD)"
          }
          EOF
          cat ./main_checkout/version_info.json

      - name: Install cibuildwheel
        shell: bash
        run: |
          python -m pip install cibuildwheel==1.7.2

      - name: Build wheels (non-windows)
        if: "!contains(matrix.os, 'windows')"
        shell: bash
        run: |
          python -m cibuildwheel --output-dir wheelhouse \
            ./main_checkout/packages/mlir

      - name: Build wheels (windows)
        if: "contains(matrix.os, 'windows')"
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          python -m cibuildwheel --output-dir wheelhouse .\main_checkout\packages\mlir

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
